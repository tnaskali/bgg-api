name: build image

on:
  push:
  pull_request:
    branches: [ 'master' ]

env:
  DOCKER_IMAGE: "$GITHUB_REPOSITORY"
  GITHUB_PACKAGE_URL: "https://maven.pkg.github.com/$GITHUB_REPOSITORY"

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      # build

      - name: Checkout project
        uses: actions/checkout@v3

      - name: Set up Java version
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '11'

      - name: Build artefacts
        run: |
          mvn --batch-mode package

      # build image

      - name: Set up buildx
        uses: docker/setup-buildx-action@v2

      - name: Build image
        uses: docker/build-push-action@v3
        with:
          context: .
          file: dockerfiles/Dockerfile
          load: true
          tags: ${{ env.DOCKER_IMAGE }}:test

      - name: Test image
        run: |
          DOCKER_PID=$(docker run -d -p 8088:8088 --rm ${{ env.DOCKER_IMAGE }}:test 2>/dev/null)
          sleep 10s
          curl http://localhost:8088/bgg-api/vN/api-docs
          docker stop $DOCKER_PID

      # deploy

      - name: Deploy artefacts
        if: github.ref == 'refs/heads/master'
        run: |
          mvn --batch-mode validate jar:jar deploy:deploy -DaltDeploymentRepository=github::default::{{ env.GITHUB_PACKAGE_URL }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract Docker metadata
        if: github.ref == 'refs/heads/master'
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: ${{ env.DOCKER_IMAGE }}

      - name: Login to Docker registry
        if: github.ref == 'refs/heads/master'
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}

      - name: Deploy image
        if: github.ref == 'refs/heads/master'
        uses: docker/build-push-action@v3
        with:
          context: .
          file: dockerfiles/Dockerfile
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
